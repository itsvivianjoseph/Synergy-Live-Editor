{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/ViVian/Downloads/Synergy-Live-Editor-master/Synergy-Live-Editor-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\ViVian\\\\Downloads\\\\Synergy-Live-Editor-master\\\\Synergy-Live-Editor-master\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useRef}from'react';import Codemirror from'codemirror';import'codemirror/lib/codemirror.css';import'codemirror/theme/dracula.css';import'codemirror/mode/javascript/javascript';import'codemirror/addon/edit/closetag';import'codemirror/addon/edit/closebrackets';import ACTIONS from'../Actions';import{toast}from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";var Editor=function Editor(_ref){var socketRef=_ref.socketRef,roomId=_ref.roomId,onCodeChange=_ref.onCodeChange,username=_ref.username;var editorRef=useRef(null);useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:editorRef.current=Codemirror.fromTextArea(document.getElementById('realtimeEditor'),{mode:{name:'javascript',json:true},theme:'dracula',autoCloseTags:true,autoCloseBrackets:true,lineNumbers:true});editorRef.current.on('change',function(instance,changes){var origin=changes.origin;var code=instance.getValue();onCodeChange(code);if(origin!=='setValue'){socketRef.current.emit(ACTIONS.CODE_CHANGE,{roomId:roomId,code:code});}});case 2:case\"end\":return _context.stop();}}},_callee);}));return _init.apply(this,arguments);}init();},[]);useEffect(function(){if(socketRef.current){socketRef.current.on(ACTIONS.CODE_CHANGE,function(_ref2){var code=_ref2.code;if(code!==null){editorRef.current.setValue(code);toast.success(\"other user is typing...\");}});}return function(){socketRef.current.off(ACTIONS.CODE_CHANGE);};},[socketRef.current]);return/*#__PURE__*/_jsx(\"textarea\",{id:\"realtimeEditor\"});};export default Editor;","map":{"version":3,"sources":["C:/Users/ViVian/Downloads/Synergy-Live-Editor-master/Synergy-Live-Editor-master/src/components/Editor.js"],"names":["React","useEffect","useRef","Codemirror","ACTIONS","toast","Editor","socketRef","roomId","onCodeChange","username","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","setValue","success","off"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAO,+BAAP,CACA,MAAO,8BAAP,CACA,MAAO,uCAAP,CACA,MAAO,gCAAP,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAASC,KAAT,KAAsB,iBAAtB,C,2CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAkD,IAA/CC,CAAAA,SAA+C,MAA/CA,SAA+C,CAApCC,MAAoC,MAApCA,MAAoC,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAfC,QAAe,MAAfA,QAAe,CAC7D,GAAMC,CAAAA,SAAS,CAAGT,MAAM,CAAC,IAAD,CAAxB,CACAD,SAAS,CAAC,UAAM,SACGW,CAAAA,IADH,sHACZ,mIACID,SAAS,CAACE,OAAV,CAAoBV,UAAU,CAACW,YAAX,CAChBC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CADgB,CAEhB,CACIC,IAAI,CAAE,CAAEC,IAAI,CAAE,YAAR,CAAsBC,IAAI,CAAE,IAA5B,CADV,CAEIC,KAAK,CAAE,SAFX,CAGIC,aAAa,CAAE,IAHnB,CAIIC,iBAAiB,CAAE,IAJvB,CAKIC,WAAW,CAAE,IALjB,CAFgB,CAApB,CAWAZ,SAAS,CAACE,OAAV,CAAkBW,EAAlB,CAAqB,QAArB,CAA+B,SAACC,QAAD,CAAWC,OAAX,CAAuB,CAClD,GAAQC,CAAAA,MAAR,CAAmBD,OAAnB,CAAQC,MAAR,CACA,GAAMC,CAAAA,IAAI,CAAGH,QAAQ,CAACI,QAAT,EAAb,CACApB,YAAY,CAACmB,IAAD,CAAZ,CACA,GAAID,MAAM,GAAK,UAAf,CAA2B,CACvBpB,SAAS,CAACM,OAAV,CAAkBiB,IAAlB,CAAuB1B,OAAO,CAAC2B,WAA/B,CAA4C,CACxCvB,MAAM,CAANA,MADwC,CAExCoB,IAAI,CAAJA,IAFwC,CAA5C,EAIH,CACJ,CAVD,EAZJ,sDADY,uCAyBZhB,IAAI,GACP,CA1BQ,CA0BN,EA1BM,CAAT,CA4BAX,SAAS,CAAC,UAAM,CACZ,GAAIM,SAAS,CAACM,OAAd,CAAuB,CACnBN,SAAS,CAACM,OAAV,CAAkBW,EAAlB,CAAqBpB,OAAO,CAAC2B,WAA7B,CAA0C,eAAc,IAAXH,CAAAA,IAAW,OAAXA,IAAW,CACpD,GAAIA,IAAI,GAAK,IAAb,CAAmB,CACfjB,SAAS,CAACE,OAAV,CAAkBmB,QAAlB,CAA2BJ,IAA3B,EACAvB,KAAK,CAAC4B,OAAN,4BACH,CACJ,CALD,EAMH,CAED,MAAO,WAAM,CACT1B,SAAS,CAACM,OAAV,CAAkBqB,GAAlB,CAAsB9B,OAAO,CAAC2B,WAA9B,EACH,CAFD,CAGH,CAbQ,CAaN,CAACxB,SAAS,CAACM,OAAX,CAbM,CAAT,CAeA,mBAAO,iBAAU,EAAE,CAAC,gBAAb,EAAP,CACH,CA9CD,CAgDA,cAAeP,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { toast } from 'react-hot-toast';\n\nconst Editor = ({ socketRef, roomId, onCodeChange,username }) => {\n    const editorRef = useRef(null);\n    useEffect(() => {\n        async function init() {\n            editorRef.current = Codemirror.fromTextArea(\n                document.getElementById('realtimeEditor'),\n                {\n                    mode: { name: 'javascript', json: true },\n                    theme: 'dracula',\n                    autoCloseTags: true,\n                    autoCloseBrackets: true,\n                    lineNumbers: true,\n                }\n            );\n\n            editorRef.current.on('change', (instance, changes) => {\n                const { origin } = changes;\n                const code = instance.getValue();\n                onCodeChange(code);\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomId,\n                        code,\n                    });\n                }\n            });\n        }\n        init();\n    }, []);\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.setValue(code);\n                    toast.success((`other user is typing...`));\n                }\n            });\n        }\n\n        return () => {\n            socketRef.current.off(ACTIONS.CODE_CHANGE);\n        };\n    }, [socketRef.current]);\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}